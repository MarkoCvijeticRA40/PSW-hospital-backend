// <auto-generated />
using System;
using HospitalLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HospitalLibrary.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HospitalLibrary.Core.Model.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<int?>("PatientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("AppointmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            DoctorId = 1,
                            PatientId = 1,
                            Start = new DateTime(2022, 11, 10, 15, 27, 24, 949, DateTimeKind.Local).AddTicks(6914)
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Bed", b =>
                {
                    b.Property<int>("BedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<int?>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("BedId");

                    b.HasIndex("RoomId");

                    b.ToTable("Beds");

                    b.HasData(
                        new
                        {
                            BedId = 1,
                            Label = "201B1"
                        },
                        new
                        {
                            BedId = 2,
                            Label = "201B2"
                        },
                        new
                        {
                            BedId = 3,
                            Label = "201B3"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.BloodRequest", b =>
                {
                    b.Property<int>("BloodRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BloodType")
                        .HasColumnType("integer");

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("QuantityInLiters")
                        .HasColumnType("double precision");

                    b.Property<string>("ReasonForRequest")
                        .HasColumnType("text");

                    b.HasKey("BloodRequestId");

                    b.ToTable("BloodRequests");

                    b.HasData(
                        new
                        {
                            BloodRequestId = 1,
                            BloodType = 5,
                            DoctorId = 1,
                            FinalDate = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuantityInLiters = 2.5,
                            ReasonForRequest = "Heart surgery"
                        },
                        new
                        {
                            BloodRequestId = 2,
                            BloodType = 0,
                            DoctorId = 1,
                            FinalDate = new DateTime(2022, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuantityInLiters = 3.0,
                            ReasonForRequest = "Heart surgery"
                        },
                        new
                        {
                            BloodRequestId = 3,
                            BloodType = 7,
                            DoctorId = 1,
                            FinalDate = new DateTime(2022, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuantityInLiters = 3.5,
                            ReasonForRequest = "Heart surgery"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DoctorId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Name = "Ognjen",
                            RoomId = 1,
                            SpecializationId = 3,
                            Surname = "Nikolic"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<bool>("IsDisplayedPublic")
                        .HasColumnType("boolean");

                    b.Property<bool>("Privatisation")
                        .HasColumnType("boolean");

                    b.Property<string>("Textt")
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "25.10.2022",
                            IsDisplayedPublic = false,
                            Privatisation = false,
                            Textt = "Awesome clinic!",
                            User = "Милош"
                        },
                        new
                        {
                            Id = 2,
                            Date = "25.10.2022",
                            IsDisplayedPublic = false,
                            Privatisation = false,
                            Textt = "It's okay... I guess.",
                            User = "Немања"
                        },
                        new
                        {
                            Id = 3,
                            Date = "25.10.2022",
                            IsDisplayedPublic = false,
                            Privatisation = false,
                            Textt = "Awful.",
                            User = "Огњен"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.HasKey("NotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAccountActivated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PatientId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Email = "proba@gmail.com",
                            IsAccountActivated = false,
                            Name = "Pera",
                            Password = "123",
                            Surname = "Peric"
                        },
                        new
                        {
                            PatientId = 2,
                            Email = "proba1@gmail.com",
                            IsAccountActivated = false,
                            Name = "Marko",
                            Password = "123",
                            Surname = "Markovic"
                        },
                        new
                        {
                            PatientId = 3,
                            Email = "proba2@gmail.com",
                            IsAccountActivated = false,
                            Name = "Aleksa",
                            Password = "123",
                            Surname = "Aleksic"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BuildingId")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = "A",
                            Description = "neki opis",
                            FloorId = 0,
                            Height = 250,
                            Number = "101A",
                            Type = 0,
                            Width = 380,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 2,
                            BuildingId = "A",
                            Description = "neki opis1",
                            FloorId = 0,
                            Height = 250,
                            Number = "102A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 3,
                            BuildingId = "A",
                            Description = "neki opis2",
                            FloorId = 0,
                            Height = 250,
                            Number = "103A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 4,
                            BuildingId = "A",
                            Description = "neki opis",
                            FloorId = 0,
                            Height = 250,
                            Number = "104A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 270
                        },
                        new
                        {
                            Id = 5,
                            BuildingId = "A",
                            Description = "neki opis1",
                            FloorId = 0,
                            Height = 250,
                            Number = "105A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 530
                        },
                        new
                        {
                            Id = 6,
                            BuildingId = "A",
                            Description = "neki opis3",
                            FloorId = 1,
                            Height = 250,
                            Number = "201A",
                            Type = 0,
                            Width = 380,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 7,
                            BuildingId = "A",
                            Description = "neki opis4",
                            FloorId = 1,
                            Height = 250,
                            Number = "202A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 8,
                            BuildingId = "A",
                            Description = "neki opis5",
                            FloorId = 1,
                            Height = 250,
                            Number = "203A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 9,
                            BuildingId = "A",
                            Description = "neki opis4",
                            FloorId = 1,
                            Height = 250,
                            Number = "204A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 270
                        },
                        new
                        {
                            Id = 10,
                            BuildingId = "A",
                            Description = "neki opis5",
                            FloorId = 1,
                            Height = 250,
                            Number = "205A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 530
                        },
                        new
                        {
                            Id = 11,
                            BuildingId = "A",
                            Description = "neki opis6",
                            FloorId = 2,
                            Height = 250,
                            Number = "301A",
                            Type = 0,
                            Width = 380,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 12,
                            BuildingId = "A",
                            Description = "neki opis7",
                            FloorId = 2,
                            Height = 250,
                            Number = "302A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 13,
                            BuildingId = "A",
                            Description = "neki opis8",
                            FloorId = 2,
                            Height = 250,
                            Number = "303A",
                            Type = 0,
                            Width = 170,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 14,
                            BuildingId = "A",
                            Description = "neki opis7",
                            FloorId = 2,
                            Height = 250,
                            Number = "304A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 270
                        },
                        new
                        {
                            Id = 15,
                            BuildingId = "A",
                            Description = "neki opis8",
                            FloorId = 2,
                            Height = 250,
                            Number = "305A",
                            Type = 0,
                            Width = 170,
                            X = 220,
                            Y = 530
                        },
                        new
                        {
                            Id = 16,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 0,
                            Height = 250,
                            Number = "101B",
                            Type = 0,
                            Width = 485,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 17,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 0,
                            Height = 250,
                            Number = "102B",
                            Type = 0,
                            Width = 480,
                            X = 505,
                            Y = 10
                        },
                        new
                        {
                            Id = 18,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 0,
                            Height = 250,
                            Number = "103B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 19,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 0,
                            Height = 250,
                            Number = "104B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 20,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 0,
                            Height = 250,
                            Number = "105B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 270
                        },
                        new
                        {
                            Id = 21,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 0,
                            Height = 250,
                            Number = "106B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 530
                        },
                        new
                        {
                            Id = 22,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 0,
                            Height = 250,
                            Number = "107B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 270
                        },
                        new
                        {
                            Id = 23,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 0,
                            Height = 250,
                            Number = "108B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 530
                        },
                        new
                        {
                            Id = 24,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 1,
                            Height = 250,
                            Number = "201B",
                            Type = 0,
                            Width = 485,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 25,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 1,
                            Height = 250,
                            Number = "202B",
                            Type = 0,
                            Width = 480,
                            X = 505,
                            Y = 10
                        },
                        new
                        {
                            Id = 26,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 1,
                            Height = 250,
                            Number = "203B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 27,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 1,
                            Height = 250,
                            Number = "204B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 28,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 1,
                            Height = 250,
                            Number = "205B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 270
                        },
                        new
                        {
                            Id = 29,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 1,
                            Height = 250,
                            Number = "206B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 530
                        },
                        new
                        {
                            Id = 30,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 1,
                            Height = 250,
                            Number = "207B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 270
                        },
                        new
                        {
                            Id = 31,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 1,
                            Height = 250,
                            Number = "208B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 530
                        },
                        new
                        {
                            Id = 32,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 2,
                            Height = 250,
                            Number = "301B",
                            Type = 0,
                            Width = 485,
                            X = 10,
                            Y = 10
                        },
                        new
                        {
                            Id = 33,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 2,
                            Height = 250,
                            Number = "302B",
                            Type = 0,
                            Width = 480,
                            X = 505,
                            Y = 10
                        },
                        new
                        {
                            Id = 34,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 2,
                            Height = 250,
                            Number = "303B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 270
                        },
                        new
                        {
                            Id = 35,
                            BuildingId = "B",
                            Description = "neki opis",
                            FloorId = 2,
                            Height = 250,
                            Number = "304B",
                            Type = 0,
                            Width = 283,
                            X = 10,
                            Y = 530
                        },
                        new
                        {
                            Id = 36,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 2,
                            Height = 250,
                            Number = "305B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 270
                        },
                        new
                        {
                            Id = 37,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 2,
                            Height = 250,
                            Number = "306B",
                            Type = 0,
                            Width = 283,
                            X = 358,
                            Y = 530
                        },
                        new
                        {
                            Id = 38,
                            BuildingId = "B",
                            Description = "neki opis1",
                            FloorId = 2,
                            Height = 250,
                            Number = "307B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 270
                        },
                        new
                        {
                            Id = 39,
                            BuildingId = "B",
                            Description = "neki opis2",
                            FloorId = 2,
                            Height = 250,
                            Number = "308B",
                            Type = 0,
                            Width = 282,
                            X = 706,
                            Y = 530
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Specialization", b =>
                {
                    b.Property<int>("SpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SpecializationId");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            SpecializationId = 1,
                            Name = "Anesthesiology"
                        },
                        new
                        {
                            SpecializationId = 2,
                            Name = "Dermatology"
                        },
                        new
                        {
                            SpecializationId = 3,
                            Name = "Family medicine"
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Vacation", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DoctorId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("VacationId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Vacations");

                    b.HasData(
                        new
                        {
                            VacationId = 1,
                            DoctorId = 1,
                            EndDate = new DateTime(2022, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.WorkTime", b =>
                {
                    b.Property<int>("WorkTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DoctorId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("WorkTimeId");

                    b.HasIndex("DoctorId");

                    b.ToTable("WorkTimes");

                    b.HasData(
                        new
                        {
                            WorkTimeId = 1,
                            DoctorId = 1,
                            EndDate = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartDate = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Appointment", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("HospitalLibrary.Core.Model.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Bed", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Room", null)
                        .WithMany("Beds")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Doctor", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalLibrary.Core.Model.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Vacation", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.WorkTime", b =>
                {
                    b.HasOne("HospitalLibrary.Core.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Room", b =>
                {
                    b.Navigation("Beds");
                });
#pragma warning restore 612, 618
        }
    }
}
